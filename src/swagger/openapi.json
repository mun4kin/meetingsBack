{
  "openapi": "3.0.1",
  "info": {
    "title": "MeetingsAPI",
    "description": "Customer API Information",
    "version": "v1",
    "contact": {
      "name": "Pugachev Anton"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "Users Controller",
      "description": "API functions"
    },
    {
      "name": "Meetings Controller",
      "description": "API functions"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "summary": "The method checks your login and password and sends auth token.",
        "tags": [
          "Users Controller"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ILogin"
              },
              "example": {
                "email": "10@gmail.com",
                "password": "10@gmail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "421": {
            "description": "Incorrect password"
          },
          "420": {
            "description": "Unknown user e-mail"
          }
        }
      }
    },
    "/users/registration": {
      "post": {
        "summary": "The method registers new users.",
        "tags": [
          "Users Controller"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IReg"
              },
              "example": {
                "email": "11@gmail.com",
                "firstName": "Anton",
                "secondName": "Anton",
                "password": "11@gmail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "User already exists"
          }
        }
      }
    },
    "/users/all": {
      "post": {
        "summary": "The method sends all users with search.(Maximum 4)",
        "tags": [
          "Users Controller"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "search": "@gmail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/meeting/all": {
      "get": {
        "summary": "The method returns all meetings for user",
        "tags": [
          "Meetings Controller"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/meeting/create": {
      "post": {
        "summary": "The method creates new meeting",
        "tags": [
          "Meetings Controller"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IMeetings"
              },
              "example": {
                "name": "Test meeting",
                "datetime": 1639326574800,
                "description": "Description of the meeting",
                "users": [
                  {
                    "userId": 80,
                    "isCreator": true
                  },
                  {
                    "userId": 76
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/meeting/delete": {
      "post": {
        "summary": "The method delete meeting",
        "tags": [
          "Meetings Controller"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meetingId": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "meetingId": 23
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/meeting/update": {
      "put": {
        "summary": "The method updates exists meeting by ID",
        "tags": [
          "Meetings Controller"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IMeetings"
              },
              "example": {
                "name": "Test meeting new",
                "meetingId": 22,
                "datetime": 1639326574800,
                "description": "Description of the meeting",
                "users": [
                  {
                    "userId": 80,
                    "isCreator": true
                  },
                  {
                    "userId": 76
                  },
                  {
                    "userId": 77
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ILogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "IReg": {
        "type": "object",
        "required": [
          "email",
          "firstName",
          "password",
          "secondName"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "isCreator": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "secondName": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "IMeetings": {
        "type": "object",
        "required": [
          "name",
          "datetime",
          "users"
        ],
        "properties": {
          "meetingId": {
            "type": "number",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "datetime": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IReg"
            }
          }
        }
      }
    }
  }
}
